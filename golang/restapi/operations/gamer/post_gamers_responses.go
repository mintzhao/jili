package gamer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PostGamersCreated 新增比赛方成功

swagger:response postGamersCreated
*/
type PostGamersCreated struct {

	// In: body
	Payload []*models.Gamer `json:"body,omitempty"`
}

// NewPostGamersCreated creates PostGamersCreated with default headers values
func NewPostGamersCreated() *PostGamersCreated {
	return &PostGamersCreated{}
}

// WithPayload adds the payload to the post gamers created response
func (o *PostGamersCreated) WithPayload(payload []*models.Gamer) *PostGamersCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post gamers created response
func (o *PostGamersCreated) SetPayload(payload []*models.Gamer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGamersCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PostGamersDefault Unexpected error

swagger:response postGamersDefault
*/
type PostGamersDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostGamersDefault creates PostGamersDefault with default headers values
func NewPostGamersDefault(code int) *PostGamersDefault {
	if code <= 0 {
		code = 500
	}

	return &PostGamersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post gamers default response
func (o *PostGamersDefault) WithStatusCode(code int) *PostGamersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post gamers default response
func (o *PostGamersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post gamers default response
func (o *PostGamersDefault) WithPayload(payload *models.Error) *PostGamersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post gamers default response
func (o *PostGamersDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGamersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
