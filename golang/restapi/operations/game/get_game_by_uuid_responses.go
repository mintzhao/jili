package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*GetGameByUUIDOK 比赛信息

swagger:response getGameByUuidOK
*/
type GetGameByUUIDOK struct {

	// In: body
	Payload *models.Game `json:"body,omitempty"`
}

// NewGetGameByUUIDOK creates GetGameByUUIDOK with default headers values
func NewGetGameByUUIDOK() *GetGameByUUIDOK {
	return &GetGameByUUIDOK{}
}

// WithPayload adds the payload to the get game by Uuid o k response
func (o *GetGameByUUIDOK) WithPayload(payload *models.Game) *GetGameByUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game by Uuid o k response
func (o *GetGameByUUIDOK) SetPayload(payload *models.Game) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameByUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetGameByUUIDDefault Unexpected error

swagger:response getGameByUuidDefault
*/
type GetGameByUUIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGameByUUIDDefault creates GetGameByUUIDDefault with default headers values
func NewGetGameByUUIDDefault(code int) *GetGameByUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGameByUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get game by UUID default response
func (o *GetGameByUUIDDefault) WithStatusCode(code int) *GetGameByUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get game by UUID default response
func (o *GetGameByUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get game by UUID default response
func (o *GetGameByUUIDDefault) WithPayload(payload *models.Error) *GetGameByUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game by UUID default response
func (o *GetGameByUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameByUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
