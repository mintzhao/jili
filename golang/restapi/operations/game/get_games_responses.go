package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*GetGamesOK 比赛列表

swagger:response getGamesOK
*/
type GetGamesOK struct {

	// In: body
	Payload []*models.Game `json:"body,omitempty"`
}

// NewGetGamesOK creates GetGamesOK with default headers values
func NewGetGamesOK() *GetGamesOK {
	return &GetGamesOK{}
}

// WithPayload adds the payload to the get games o k response
func (o *GetGamesOK) WithPayload(payload []*models.Game) *GetGamesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get games o k response
func (o *GetGamesOK) SetPayload(payload []*models.Game) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGamesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetGamesDefault Unexpected error

swagger:response getGamesDefault
*/
type GetGamesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGamesDefault creates GetGamesDefault with default headers values
func NewGetGamesDefault(code int) *GetGamesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGamesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get games default response
func (o *GetGamesDefault) WithStatusCode(code int) *GetGamesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get games default response
func (o *GetGamesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get games default response
func (o *GetGamesDefault) WithPayload(payload *models.Error) *GetGamesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get games default response
func (o *GetGamesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGamesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
