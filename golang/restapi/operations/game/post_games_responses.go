package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PostGamesCreated 新增比赛成功

swagger:response postGamesCreated
*/
type PostGamesCreated struct {

	// In: body
	Payload []*models.Game `json:"body,omitempty"`
}

// NewPostGamesCreated creates PostGamesCreated with default headers values
func NewPostGamesCreated() *PostGamesCreated {
	return &PostGamesCreated{}
}

// WithPayload adds the payload to the post games created response
func (o *PostGamesCreated) WithPayload(payload []*models.Game) *PostGamesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post games created response
func (o *PostGamesCreated) SetPayload(payload []*models.Game) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGamesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PostGamesDefault Unexpected error

swagger:response postGamesDefault
*/
type PostGamesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostGamesDefault creates PostGamesDefault with default headers values
func NewPostGamesDefault(code int) *PostGamesDefault {
	if code <= 0 {
		code = 500
	}

	return &PostGamesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post games default response
func (o *PostGamesDefault) WithStatusCode(code int) *PostGamesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post games default response
func (o *PostGamesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post games default response
func (o *PostGamesDefault) WithPayload(payload *models.Error) *PostGamesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post games default response
func (o *PostGamesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGamesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
