package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteGameByUUIDHandlerFunc turns a function with the right signature into a delete game by UUID handler
type DeleteGameByUUIDHandlerFunc func(DeleteGameByUUIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteGameByUUIDHandlerFunc) Handle(params DeleteGameByUUIDParams) middleware.Responder {
	return fn(params)
}

// DeleteGameByUUIDHandler interface for that can handle valid delete game by UUID params
type DeleteGameByUUIDHandler interface {
	Handle(DeleteGameByUUIDParams) middleware.Responder
}

// NewDeleteGameByUUID creates a new http.Handler for the delete game by UUID operation
func NewDeleteGameByUUID(ctx *middleware.Context, handler DeleteGameByUUIDHandler) *DeleteGameByUUID {
	return &DeleteGameByUUID{Context: ctx, Handler: handler}
}

/*DeleteGameByUUID swagger:route DELETE /games/{UUID} Game deleteGameByUuid

删除比赛信息

根据uuid,删除一场比赛的信息

*/
type DeleteGameByUUID struct {
	Context *middleware.Context
	Handler DeleteGameByUUIDHandler
}

func (o *DeleteGameByUUID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteGameByUUIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
