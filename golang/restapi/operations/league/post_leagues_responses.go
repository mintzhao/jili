package league

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PostLeaguesCreated 新增了一条联赛信息

swagger:response postLeaguesCreated
*/
type PostLeaguesCreated struct {

	// In: body
	Payload *models.League `json:"body,omitempty"`
}

// NewPostLeaguesCreated creates PostLeaguesCreated with default headers values
func NewPostLeaguesCreated() *PostLeaguesCreated {
	return &PostLeaguesCreated{}
}

// WithPayload adds the payload to the post leagues created response
func (o *PostLeaguesCreated) WithPayload(payload *models.League) *PostLeaguesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post leagues created response
func (o *PostLeaguesCreated) SetPayload(payload *models.League) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLeaguesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostLeaguesDefault unexpected error

swagger:response postLeaguesDefault
*/
type PostLeaguesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostLeaguesDefault creates PostLeaguesDefault with default headers values
func NewPostLeaguesDefault(code int) *PostLeaguesDefault {
	if code <= 0 {
		code = 500
	}

	return &PostLeaguesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post leagues default response
func (o *PostLeaguesDefault) WithStatusCode(code int) *PostLeaguesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post leagues default response
func (o *PostLeaguesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post leagues default response
func (o *PostLeaguesDefault) WithPayload(payload *models.Error) *PostLeaguesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post leagues default response
func (o *PostLeaguesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLeaguesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
