package league

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*GetLeagueByUUIDOK Individual League contents

swagger:response getLeagueByUuidOK
*/
type GetLeagueByUUIDOK struct {

	// In: body
	Payload *models.League `json:"body,omitempty"`
}

// NewGetLeagueByUUIDOK creates GetLeagueByUUIDOK with default headers values
func NewGetLeagueByUUIDOK() *GetLeagueByUUIDOK {
	return &GetLeagueByUUIDOK{}
}

// WithPayload adds the payload to the get league by Uuid o k response
func (o *GetLeagueByUUIDOK) WithPayload(payload *models.League) *GetLeagueByUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get league by Uuid o k response
func (o *GetLeagueByUUIDOK) SetPayload(payload *models.League) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLeagueByUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetLeagueByUUIDDefault unexpected error

swagger:response getLeagueByUuidDefault
*/
type GetLeagueByUUIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLeagueByUUIDDefault creates GetLeagueByUUIDDefault with default headers values
func NewGetLeagueByUUIDDefault(code int) *GetLeagueByUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetLeagueByUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get league by UUID default response
func (o *GetLeagueByUUIDDefault) WithStatusCode(code int) *GetLeagueByUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get league by UUID default response
func (o *GetLeagueByUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get league by UUID default response
func (o *GetLeagueByUUIDDefault) WithPayload(payload *models.Error) *GetLeagueByUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get league by UUID default response
func (o *GetLeagueByUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLeagueByUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
