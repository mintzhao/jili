package league

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetLeaguesHandlerFunc turns a function with the right signature into a get leagues handler
type GetLeaguesHandlerFunc func(GetLeaguesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetLeaguesHandlerFunc) Handle(params GetLeaguesParams) middleware.Responder {
	return fn(params)
}

// GetLeaguesHandler interface for that can handle valid get leagues params
type GetLeaguesHandler interface {
	Handle(GetLeaguesParams) middleware.Responder
}

// NewGetLeagues creates a new http.Handler for the get leagues operation
func NewGetLeagues(ctx *middleware.Context, handler GetLeaguesHandler) *GetLeagues {
	return &GetLeagues{Context: ctx, Handler: handler}
}

/*GetLeagues swagger:route GET /leagues League getLeagues

联赛列表

Leagues返回系统支持的一系列联赛信息, 包括联赛名称,联赛logo等等

*/
type GetLeagues struct {
	Context *middleware.Context
	Handler GetLeaguesHandler
}

func (o *GetLeagues) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetLeaguesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
