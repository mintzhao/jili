package league

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PutLeagueByUUIDOK 修改了一条联赛信息

swagger:response putLeagueByUuidOK
*/
type PutLeagueByUUIDOK struct {

	// In: body
	Payload *models.League `json:"body,omitempty"`
}

// NewPutLeagueByUUIDOK creates PutLeagueByUUIDOK with default headers values
func NewPutLeagueByUUIDOK() *PutLeagueByUUIDOK {
	return &PutLeagueByUUIDOK{}
}

// WithPayload adds the payload to the put league by Uuid o k response
func (o *PutLeagueByUUIDOK) WithPayload(payload *models.League) *PutLeagueByUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put league by Uuid o k response
func (o *PutLeagueByUUIDOK) SetPayload(payload *models.League) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutLeagueByUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutLeagueByUUIDDefault unexpected error

swagger:response putLeagueByUuidDefault
*/
type PutLeagueByUUIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutLeagueByUUIDDefault creates PutLeagueByUUIDDefault with default headers values
func NewPutLeagueByUUIDDefault(code int) *PutLeagueByUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutLeagueByUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put league by UUID default response
func (o *PutLeagueByUUIDDefault) WithStatusCode(code int) *PutLeagueByUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put league by UUID default response
func (o *PutLeagueByUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put league by UUID default response
func (o *PutLeagueByUUIDDefault) WithPayload(payload *models.Error) *PutLeagueByUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put league by UUID default response
func (o *PutLeagueByUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutLeagueByUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
