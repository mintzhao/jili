package season

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PostLeagueSeasonCreated 新增了一条联赛赛季信息

swagger:response postLeagueSeasonCreated
*/
type PostLeagueSeasonCreated struct {

	// In: body
	Payload *models.Season `json:"body,omitempty"`
}

// NewPostLeagueSeasonCreated creates PostLeagueSeasonCreated with default headers values
func NewPostLeagueSeasonCreated() *PostLeagueSeasonCreated {
	return &PostLeagueSeasonCreated{}
}

// WithPayload adds the payload to the post league season created response
func (o *PostLeagueSeasonCreated) WithPayload(payload *models.Season) *PostLeagueSeasonCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post league season created response
func (o *PostLeagueSeasonCreated) SetPayload(payload *models.Season) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLeagueSeasonCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostLeagueSeasonDefault unexpected error

swagger:response postLeagueSeasonDefault
*/
type PostLeagueSeasonDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostLeagueSeasonDefault creates PostLeagueSeasonDefault with default headers values
func NewPostLeagueSeasonDefault(code int) *PostLeagueSeasonDefault {
	if code <= 0 {
		code = 500
	}

	return &PostLeagueSeasonDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post league season default response
func (o *PostLeagueSeasonDefault) WithStatusCode(code int) *PostLeagueSeasonDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post league season default response
func (o *PostLeagueSeasonDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post league season default response
func (o *PostLeagueSeasonDefault) WithPayload(payload *models.Error) *PostLeagueSeasonDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post league season default response
func (o *PostLeagueSeasonDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLeagueSeasonDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
