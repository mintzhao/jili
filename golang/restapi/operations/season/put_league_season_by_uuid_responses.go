package season

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*PutLeagueSeasonByUUIDOK 更新了一条联赛赛季信息

swagger:response putLeagueSeasonByUuidOK
*/
type PutLeagueSeasonByUUIDOK struct {

	// In: body
	Payload *models.Season `json:"body,omitempty"`
}

// NewPutLeagueSeasonByUUIDOK creates PutLeagueSeasonByUUIDOK with default headers values
func NewPutLeagueSeasonByUUIDOK() *PutLeagueSeasonByUUIDOK {
	return &PutLeagueSeasonByUUIDOK{}
}

// WithPayload adds the payload to the put league season by Uuid o k response
func (o *PutLeagueSeasonByUUIDOK) WithPayload(payload *models.Season) *PutLeagueSeasonByUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put league season by Uuid o k response
func (o *PutLeagueSeasonByUUIDOK) SetPayload(payload *models.Season) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutLeagueSeasonByUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutLeagueSeasonByUUIDDefault unexpected error

swagger:response putLeagueSeasonByUuidDefault
*/
type PutLeagueSeasonByUUIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutLeagueSeasonByUUIDDefault creates PutLeagueSeasonByUUIDDefault with default headers values
func NewPutLeagueSeasonByUUIDDefault(code int) *PutLeagueSeasonByUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutLeagueSeasonByUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put league season by UUID default response
func (o *PutLeagueSeasonByUUIDDefault) WithStatusCode(code int) *PutLeagueSeasonByUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put league season by UUID default response
func (o *PutLeagueSeasonByUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put league season by UUID default response
func (o *PutLeagueSeasonByUUIDDefault) WithPayload(payload *models.Error) *PutLeagueSeasonByUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put league season by UUID default response
func (o *PutLeagueSeasonByUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutLeagueSeasonByUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
