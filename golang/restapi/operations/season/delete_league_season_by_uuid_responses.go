package season

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mintzhao/jili/golang/models"
)

/*DeleteLeagueSeasonByUUIDOK 删除了一条联赛赛季信息

swagger:response deleteLeagueSeasonByUuidOK
*/
type DeleteLeagueSeasonByUUIDOK struct {
}

// NewDeleteLeagueSeasonByUUIDOK creates DeleteLeagueSeasonByUUIDOK with default headers values
func NewDeleteLeagueSeasonByUUIDOK() *DeleteLeagueSeasonByUUIDOK {
	return &DeleteLeagueSeasonByUUIDOK{}
}

// WriteResponse to the client
func (o *DeleteLeagueSeasonByUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

/*DeleteLeagueSeasonByUUIDDefault unexpected error

swagger:response deleteLeagueSeasonByUuidDefault
*/
type DeleteLeagueSeasonByUUIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteLeagueSeasonByUUIDDefault creates DeleteLeagueSeasonByUUIDDefault with default headers values
func NewDeleteLeagueSeasonByUUIDDefault(code int) *DeleteLeagueSeasonByUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteLeagueSeasonByUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete league season by UUID default response
func (o *DeleteLeagueSeasonByUUIDDefault) WithStatusCode(code int) *DeleteLeagueSeasonByUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete league season by UUID default response
func (o *DeleteLeagueSeasonByUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete league season by UUID default response
func (o *DeleteLeagueSeasonByUUIDDefault) WithPayload(payload *models.Error) *DeleteLeagueSeasonByUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete league season by UUID default response
func (o *DeleteLeagueSeasonByUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteLeagueSeasonByUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
